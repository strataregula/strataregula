name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov pytest-mock pyyaml
    
    - name: Run unit tests
      run: |
        python tests/test_runner.py unit
    
    - name: Run integration tests
      run: |
        python tests/test_runner.py integration
    
    - name: Run coverage
      if: matrix.python-version == '3.11'
      run: |
        python tests/test_runner.py coverage
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  transfer-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-mock pyyaml
    
    - name: Run Transfer/Copy subsystem tests
      run: |
        python tests/test_runner.py transfer
    
    - name: Test CLI integration
      run: |
        # Test basic CLI functionality
        python -m pytest tests/transfer/test_cli_transfer.py -v
    
    - name: Write rich run log (JST)
      if: always()
      run: |
        python tools/new_run_log.py \
          --label "ci-test" \
          --summary "PR CI passed (tests completed). Pytest/CLI validation non-blocking." \
          --intent "Trace every test run for reproducibility" \
          --with-bench
    
    - name: Upload Run Log artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: runlog-test-${{ matrix.python-version }}
        path: docs/run/
    
    - name: Comment run log (PR)
      if: ${{ github.event_name == 'pull_request' && matrix.python-version == '3.11' }}
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: run-summary-test
        message: |
          üìù **Test Run Log** available in artifact **runlog-test-3.11** (see docs/run/ JST file)
          
          All test executions traced for reproducibility and transparency.
